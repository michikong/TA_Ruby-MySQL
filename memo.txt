-----------------
疑問点
-----------------
ERBとは
Erbは"Embedded RuBy"の略です。 
.html.erbファイルはRubyコードが組み込まれたhtm;ファイルのようなもの、と考えてよいでしょう。 
Railsはテンプレートエンジンとしてerbを標準で使っています。

ERB とは、<% ... %> や <%= ... %> という HTML タグのようなものを 
HTML に埋め込み、 ... に Ruby コードを記述し、result メソッドで
その埋め込まれた Ruby コードを実行して、
最終的に HTML として出力できる機能です。

-----------------
lesson8:Ruby
-----------------
# 1,リポジトリの作成（初期化）
git init


-----------------
2.1 Rubyが入っていないHTMLファイルをRubyファイルとして扱う
-----------------

<<-PAGE ... PAGE

とすると ... にHTMLを記述できる
また、 <<- は必要だが、 PAGE の部分は
HTML でも STRING でも何でもいい

-----------------
2.2 ERBを使ってRubyコードをHTMLに埋め込む
-----------------

<%= ... %>
<%= ... %> は、 ... に記述する Ruby コードを実行し、
その返り値を HTML に埋め込みます

-----------------
if文を埋め込む
-----------------

    <% name = '太郎' %>
    <% time_japan = Time.now.getlocal("+09:00") %>
    <p>今は<%= time_japan.hour %>時です。</p>
    <% if 6 <= time_japan.hour && time_japan.hour < 12 %>
      <p>おはよう、<%= name %>さん</p>
    <% elsif 12 <= time_japan.hour && time_japan.hour < 18 %>
      <p>こんにちは、<%= name %>さん</p>
    <% else %>
      <p>こんばんは、<%= name %>さん</p>
    <% end %>
 

-----------------
eachを埋め込む
-----------------

      <% (1..9).each do |num| %>
        <li><%= num %></li>
      <% end %>


-----------------
3. Webサーバを起動してRubyを自動的に実行させる
-----------------
人の代わりにrubyコマンドを実行してくれるのがWebサーバ
Webサーバを起動して、代わりにRubyを実行してもらう

-----------------
3.1 Webサーバ - Puma とは
-----------------
Webサーバとは
HTTPリクエストを受け取り、
HTMLなどのWebページをHTTPレスポンスとして返すサーバ

# Puma のインストール
gem install puma

Gem とは
Ruby のライブラリ
ライブラリとは、便利な機能（プログラム）を
パッケージングした拡張機能のようなもの

Gemがあることで、私達は、自分で全ての機能を作る必要がなく、
すでに誰かが作ってくれたGemをインストールするだけで、
簡単に機能を実装することができるのです。
車輪の再発明は避けるべきです。


-----------------
3.2 Webサーバの起動
-----------------
Puma を起動するためには Ruby で設定ファイルを記述しなければならない。
この設定を行うには高度な知識が必要となるので、
手軽に Web サーバを起動して、Web アプリケーシ
ョンを作成できるようなライブラリをインストールします(Sinatraなど)

Sinatraとは
軽量なWEBアプリケーションフレームワーク

WEBアプリケーションフレームワークとは
WEBアプリを作成するための機能が備わった雛形(テンプレート)のようなもの

自分で一からアプリを作成するのは骨が折れる作業ですが、
このようなフレームワークの恩恵に預かることで、
素早く堅牢なアプリを作成できる。

# Sinatra のインストール
gem install sinatra

作成する Web アプリ
HTML フォームがあり、名前を入力すると挨拶してくれるだけの 
Web アプリです。Web アプリと呼ぶには、貧弱過ぎる代物ですが、
Web アプリの基礎の基礎です。

# フォルダを作成
mkdir ~/environment/lessen8_10/sinatra-web
mkdir ~/environment/lessen8_10/sinatra-web/views/
touch ~/environment/lessen8_10/sinatra-web/views/index.erb
touch ~/environment/lessen8_10/sinatra-web/app.rb


-----------------
app.rb
-----------------

require 'sinatra' 
・Sinatra を読み込み

get '/'
・トップページ(/)に HTTP リクエストの GET メソッドが来たときに
対する処理を do ... end のブロックの中に記述

erb :index
・views/index.erb 内に埋め込まれた Ruby コードを実行した
・結果として出力された HTML をレスポンスとして返すという処理
views/index.erb が呼び出されるのは Sinatra のルール